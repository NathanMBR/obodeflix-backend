// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserTypes {
  COMMON
  ADMIN
}

enum SeasonTypes {
  TV
  MOVIE
  OTHER
}

enum SeriesNameLanguages {
  ENGLISH
  JAPANESE
}

model User {
  id Int @id @default(autoincrement()) @db.Integer

  name     String    @db.VarChar(255)
  email    String    @db.VarChar(255)
  password String    @db.VarChar(255)
  type     UserTypes

  createdAt DateTime  @default(now()) @db.Timestamptz()
  updatedAt DateTime  @default(now()) @updatedAt @db.Timestamptz()
  deletedAt DateTime? @db.Timestamptz()
}

model Series {
  id Int @id @default(autoincrement()) @db.Integer

  mainName         String              @db.VarChar(255)
  alternativeName  String?             @db.VarChar(255)
  mainNameLanguage SeriesNameLanguages
  description      String?             @db.Text

  createdAt DateTime  @default(now()) @db.Timestamptz()
  updatedAt DateTime  @default(now()) @updatedAt @db.Timestamptz()
  deletedAt DateTime? @db.Timestamptz()

  seriesTags SeriesTags[]
  seasons    Season[]
}

model Tag {
  id Int @id @default(autoincrement()) @db.Integer

  name String @db.VarChar(255)

  createdAt DateTime  @default(now()) @db.Timestamptz()
  updatedAt DateTime  @default(now()) @updatedAt @db.Timestamptz()
  deletedAt DateTime? @db.Timestamptz()

  seriesTags SeriesTags[]
}

model SeriesTags {
  seriesId Int @db.Integer
  tagId    Int @db.Integer

  createdAt DateTime  @default(now()) @db.Timestamptz()
  updatedAt DateTime  @default(now()) @updatedAt @db.Timestamptz()
  deletedAt DateTime? @db.Timestamptz()

  series Series @relation(fields: [seriesId], references: [id])
  tag    Tag    @relation(fields: [tagId], references: [id])

  @@id([seriesId, tagId])
}

model Season {
  id Int @id @default(autoincrement()) @db.Integer

  name     String      @db.VarChar(255)
  type     SeasonTypes
  seriesId Int         @db.Integer
  position Int         @db.Integer

  createdAt DateTime  @default(now()) @db.Timestamptz()
  updatedAt DateTime  @default(now()) @updatedAt @db.Timestamptz()
  deletedAt DateTime? @db.Timestamptz()

  series   Series    @relation(fields: [seriesId], references: [id])
  episodes Episode[]
}

model Episode {
  id Int @id @default(autoincrement()) @db.Integer

  name     String @db.VarChar(255)
  seasonId Int    @db.Integer
  duration Int    @db.Integer
  path     String @db.Text

  createdAt DateTime  @default(now()) @db.Timestamptz()
  updatedAt DateTime  @default(now()) @updatedAt @db.Timestamptz()
  deletedAt DateTime? @db.Timestamptz()

  season Season @relation(fields: [seasonId], references: [id])
}
